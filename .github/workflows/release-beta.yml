name: CI & Release (Beta)

on:
  push:
    tags:
      - 'v*.*.*-beta*' # Trigger on all beta tags

jobs:
  # Run tests (single Node version is enough for beta)
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn test

  # Build once
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - uses: actions/upload-artifact@v4
        with:
          name: dist-folder
          path: ./dist

  # Package + upload tarballs
  release-dist:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist-folder
          path: ./dist
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn
      - run: yarn install --frozen-lockfile

      - name: Get version from tag
        id: version
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Get short SHA
        id: shortsha
        run: echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - run: yarn version --new-version ${{ steps.version.outputs.version }} --no-git-tag-version

      - name: Build tarballs
        run: npx oclif pack tarballs --sha ${{ steps.shortsha.outputs.sha }} --targets linux-x64,linux-arm64,linux-arm,darwin-x64,darwin-arm64 --parallel

      - name: Deploy tarballs
        run: npx oclif upload tarballs --sha ${{ steps.shortsha.outputs.sha }} --targets linux-x64,linux-arm64,linux-arm,darwin-x64,darwin-arm64
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_SPACES_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SPACES_SECRET }}
          AWS_REGION: ${{ secrets.DO_SPACES_REGION }}
          AWS_ENDPOINT_URL: ${{ secrets.DO_SPACES_ENDPOINT }}

      - name: Promote tarballs
        run: npx oclif promote --version ${{ steps.version.outputs.version }} --sha ${{ steps.shortsha.outputs.sha }} --channel beta --targets linux-x64,linux-arm64,linux-arm,darwin-x64,darwin-arm64 --ignore-missing
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_SPACES_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SPACES_SECRET }}
          AWS_REGION: ${{ secrets.DO_SPACES_REGION }}
          AWS_ENDPOINT_URL: ${{ secrets.DO_SPACES_ENDPOINT }}
