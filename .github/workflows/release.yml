name: CI & Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '**'

jobs:
  unit-tests:
    strategy:
      matrix:
        os: ['ubuntu-latest']
        node_version: [lts/-1, lts/*, latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: yarn

      - name: Install libsecret (Ubuntu only)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libsecret-1-dev

      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn test

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: yarn
          registry-url: 'https://registry.npmjs.org'

      - name: Get version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn version --new-version ${{ steps.version.outputs.version }} --no-git-tag-version

      - name: Pack and upload tarballs to DigitalOcean Spaces
        run: yarn release
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_SPACES_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SPACES_SECRET }}
          AWS_REGION: ${{ secrets.DO_SPACES_REGION }}
          AWS_ENDPOINT_URL: ${{ secrets.DO_SPACES_ENDPOINT }}

      - name: Promote tarballs
        run: npx oclif promote --version ${{ steps.version.outputs.version }} --sha ${{ github.sha }} --channel stable
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_SPACES_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SPACES_SECRET }}
          AWS_REGION: ${{ secrets.DO_SPACES_REGION }}
          AWS_ENDPOINT_URL: ${{ secrets.DO_SPACES_ENDPOINT }}

      # Import signing keys for .deb packaging
      - name: Import GPG key
        run: |
          echo "${{ secrets.XGSD_SIGNING_KEY }}" | gpg --batch --import
          echo "${{ secrets.XGSD_GPG_OVERTRUST }}" | gpg --batch --import-ownertrust
          gpg --list-keys ${{ secrets.XGSD_GPG_KEY_ID }}

      - name: Build debs
        run: npx oclif pack deb

      - name: Upload debs to DigitalOcean Spaces
        run: npx oclif upload deb
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_SPACES_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SPACES_SECRET }}
          AWS_REGION: ${{ secrets.DO_SPACES_REGION }}
          AWS_ENDPOINT_URL: ${{ secrets.DO_SPACES_ENDPOINT }}

      - name: Promote deb
        run: npx oclif promote --version ${{ steps.version.outputs.version }} --sha ${{ github.sha }} --channel stable --deb
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_SPACES_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SPACES_SECRET }}
          AWS_REGION: ${{ secrets.DO_SPACES_REGION }}
          AWS_ENDPOINT_URL: ${{ secrets.DO_SPACES_ENDPOINT }}

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
